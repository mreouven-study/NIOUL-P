@model WebApplication3.CVM.RecipeComCVM

@{
    ViewBag.Title = "printRecipes";
}




<!-- Receipe Slider -->
<div class="container">
    <div class="row">
        <div class="col-12">
            <div class="receipe-slider owl-carousel">
                <img src="https://www.simplyrecipes.com/wp-content/uploads/2007/01/basic-tomato-sauce-horiz-a-1200.jpg" alt="">
                <img src="~/images/bg-img/bg5.jpg" alt="">
                <img src="~/images/bg-img/bg5.jpg" alt="">
            </div>
        </div>
    </div>
</div>

<!-- Receipe Content Area -->
<div class="receipe-content-area">
    <div class="container">

        <div class="row">
            <div class="col-12 col-md-8">
                <div class="receipe-headline my-5">
                    <span>April 05, 2018</span>
                    <h2>@Model.recipes.Name</h2>
                    <div class="receipe-duration">
                        <h6>Prep: @Model.recipes.tempsdepreparation mins</h6>
                        <h6>Cook: @Model.recipes.tempsdecuisson mins</h6>
                        <h6>Yields: @Model.recipes.nombrePers Servings</h6>
                    </div>
                </div>
            </div>

            <div class="col-12 col-md-4">
                <div class="receipe-ratings text-right my-5">
                    <div class="ratings">
                        @{int conter = int.Parse(Model.recipes.difficulty);}
                        @for (var i = 0; i < 5; i++)
                        {
                            if (conter > 0)
                            {
                                <i class="fa fa-star" aria-hidden="true"></i>
                                conter--;
                            }
                            else
                            {
                                <i class="fa fa-star-o" aria-hidden="true"></i>
                            }
                        }



                    </div>




                    @if (int.Parse(Model.recipes.difficulty) < 3)
                    {
                        <a href="#" class="btn delicious-btn"> For Beginer</a>
                    }
                    else
                    {
                        <a href="#" class="btn delicious-btn"> For Professionel</a>

                    }
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12 col-lg-8">
                <!-- Single Preparation Step -->
                @{
                    string[] explain = Model.recipes.explication.Split('\n');
                    ;
                }
                @for (var i = 0; i < explain.Length; i++)
                {
                    <div class="single-preparation-step d-flex">
                        <h4>@(i + 1)</h4>
                        <p>@explain[i]</p>
                    </div>
                }

            </div>

            <!-- Ingredients -->
            <div class="col-12 col-lg-4">
                <div class="ingredients">
                    <h4>Ingredients</h4>
          …
[20:15, 16/4/2019] ראובן מימון: register.cs
[20:15, 16/4/2019] ראובן מימון: @model WebApplication3.Models.Users

@{
    ViewBag.Title = "Register";
}

<script src="~/js/jquery.validate.js"></script>
<script src="~/js/jquery.validate.unobtrusive.js"></script>
<script src="~/js/jquery-3.3.1.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-form-validator/2.3.79/jquery.form-validator.js"></script>
<script src="~/js/bootstrap.js"></script>
<script src="~/js/bootstrap.min.js"></script>
<!------ Include the above in your HEAD tag ---------->
<div class="container">
    <div class="viewbag" style="color:orangered">@ViewBag.Error</div>
    <style>
        .viewbag {
            font-size: 30px;
        }
    </style>
    <form class="form-horizontal" onsubmit="event.preventDefault(); validate()" action="ValidateRegister" role="form" method="post" id="formreg">
        <h2>Registration</h2>
        <div class="form-group">

            <label for="firstName" class="col-sm-3 control-label">First Name</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.First_Name, new { Class = "form-control", autofocus = "", placeholder = "Please enter First Name" })
            </div>
        </div>
        <div class="form-group">
            <label for="lastName" class="col-sm-3 control-label">Last Name</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Last_Name, new { Class = "form-control", placeholder = "Please enter Last Name" })

            </div>
        </div>
        <div class="form-group">
            <label for="email" class="col-sm-3 control-label">Email* </label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Email, new { Class = "form-control", type = "email", placeholder = "Please enter Email" })
            </div>
        </div>
        <div class="form-group">
            <label for="password" class="col-sm-3 control-label">Password*</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Password, new { Class = "form-control", placeholder = "Please enter Password",type="password" })
            </div>
        </div>
        <div class="form-group">
            <label for="password" class="col-sm-3 control-label">Confirm Password*</label>
            <div class="col-sm-9">
                <input type="password" id="password" placeholder="Confirm Password" class="form-control">
            </div>
        </div>

        <div class="form-group">
            <label for="phoneNumber" class="col-sm-3 control-label">Phone number </label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.Phone_Number, new { Class = "form-control", placeholder = "Please enter phone Number" })
                <span class="help-block">Your phone number won't be disclosed anywhere </span>
            </div>
        </div>


        <div class="form-group">
            <label class="control-label col-sm-3">Gender</label>
            <div class="col-sm-6">
                <div class="row">
                    <div class="col-sm-4">
                        <label class="radio-inline">
                            @Html.RadioButton("Gender", "Female")Female

                        </label>
                    </div>
                    <div class="col-sm-4">
                        <label class="radio-inline">
                            @Html.RadioButton("Gender", "Male")Male
                        </label>
                    </div>
                </div>
            </div>
        </div> <!-- /.form-group -->
        <div class="form-group">
            <div class="col-sm-9 col-sm-offset-3">
                <span class="help-block">*Required fields</span>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-9 col-sm-offset-3">

                <button type="submit" class="btn btn-primary btn-block">Register</button>
            </div>
            <div class="col-sm-9 col-sm-offset-3">

                <fb:login-button scope="public_profile,email" onlogin="checkLoginState();"> </fb:login-button>
            </div>

        </div>

</form> <!-- /form -->

</div> <!-- ./container -->
<script>

    function validate() {
        var fname = document.forms["formreg"]["First_Name"];
        var lname = document.forms["formreg"]["Last_Name"];
        var email = document.forms["formreg"]["Email"];
        var phone = document.forms["formreg"]["Phone_Number"];
        var password = document.forms["formreg"]["Password"];
        var password2 = document.forms["formreg"]["password"];

        var Gender = document.forms["formreg"]["Gender"];

        if (fname.value == "") {
            window.alert("Please enter your First_Name.");
            fname.focus();
            return false;
        }

        if (lname.value == "") {
            window.alert("Please enter your Last_Name.");
            lname.focus();
            return false;
        }



        if (phone.value == "") {
            window.alert("Please enter your telephone number.");
            phone.focus();
            return false;
        }
        if (password.value == '') {
            window.alert("Please enter your password");
            password.focus();
            return false;
        }
        if (password.value != password2.value) {
            window.alert("Password Not Matching");
            password.focus();
            return flase;
        }

        if (Gender.value == '') {
            alert("Please enter your Gender.");
            return false;
        }

        document.forms['formreg'].submit();
    }</script>




<script>
    // This is called with the results from from FB.getLoginStatus().
    function statusChangeCallback(response) {
        console.log('statusChangeCallback');
        console.log(response);
        // The response object is returned with a status field that lets the
        // app know the current login status of the person.
        // Full docs on the response object can be found in the documentation
        // for FB.getLoginStatus().
        if (response.status === 'connected') {
            // Logged into your app and Facebook.
            testAPI();
            
        } else {
            // The person is not logged into your app or we are unable to tell.
            document.getElementById('status').innerHTML = 'Please log ' +
                'into this app.';
        }
    }

    // This function is called when someone finishes with the Login
    // Button.  See the onlogin handler attached to it in the sample
    // code below.
    function checkLoginState() {
        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    }

    window.fbAsyncInit = function () {
        FB.init({
            appId: '989584871412750',
            cookie: true,  // enable cookies to allow the server to access
            // the session
            xfbml: true,  // parse social plugins on this page
            version: 'v3.2' // The Graph API version to use for the call
        });

        // Now that we've initialized the JavaScript SDK, we call
        // FB.getLoginStatus().  This function gets the state of the
        // person visiting this page and can return one of three states to
        // the callback you provide.  They can be:
        //
        // 1. Logged into your app ('connected')
        // 2. Logged into Facebook, but not your app ('not_authorized')
        // 3. Not logged into Facebook and can't tell if they are logged into
        //    your app or not.
        //
        // These three cases are handled in the callback function.

        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });

    };

    // Load the SDK asynchronously
    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "https://connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));

    // Here we run a very simple test of the Graph API after login is
    // successful.  See statusChangeCallback() for when this call is made.
    function testAPI() {

        FB.api('/me?locale=en_US&fields=first_name,last_name,email,gender,birthday', function (response) {
            document.forms["formreg"]["First_Name"].value = response.first_name;
            document.forms["formreg"]["Last_Name"].value = response.last_name;
            document.forms["formreg"]["Email"].value = response.email;
            if (response.gender == 'male')
                document.forms["formreg"]["Gender"][1].cheked = true;
            else
                document.forms["formreg"]["Gender"][0].cheked = true;


        });

    }
    function diconnect() {
        FB.logout(function (response) {
            // Person is now logged out
        });
    }
</script>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->




<div id="status">
</div>